<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<languages>
	<language id="1" name="Declare">
		<group id="32" name="existence">
			<group id="35" name="at least">
				<template id="3">
					<description>"A" has to be executed at least once.</description>
					<display>1..*</display>
					<name>existence</name>
					<text>&lt;&gt; ( "A" )</text>
					<parameters>
						<parameter branchable="false" id="1" name="A">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
					</parameters>
					<statemessages>
						<message state="VIOLATED_TEMPORARY">&lt;html&gt;
							&lt;p&gt;Task &amp;quot;A&amp;quot; has not been executed yet. &lt;/p&gt;
							&lt;p&gt;To satisfy this constraint you must execite task &amp;quot;A&amp;quot;.&lt;/p&gt;&lt;/html&gt;</message>
						<message state="VIOLATED">&lt;html&gt;Task &amp;quot;A&amp;quot; has never been executed.&lt;/html&gt;</message>
						<message state="SATISFIED">&lt;html&gt;Task &amp;quot;A&amp;quot; has been executed at least one before.&lt;/html&gt;</message>
					</statemessages>
				</template>
				<template id="4">
					<description>"A" has to be executed at lest two times.</description>
					<display>2..*</display>
					<name>existence2</name>
					<text>&lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) )</text>
					<parameters>
						<parameter branchable="false" id="1" name="A">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
					</parameters>
					<statemessages>
						<message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message>
						<message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message>
						<message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message>
					</statemessages>
				</template>
				<template id="5">
					<description>A has to happen at least three times</description>
					<display>3..*</display>
					<name>existence3</name>
					<text>&lt;&gt;( "A" /\ X(  &lt;&gt;( "A" /\ X( &lt;&gt; "A" )) ))</text>
					<parameters>
						<parameter branchable="false" id="1" name="A">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
					</parameters>
					<statemessages>
						<message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message>
						<message state="VIOLATED">VIOLATED undefined</message>
						<message state="SATISFIED">SATISFIED undefined</message>
					</statemessages>
				</template>
			</group>
			<group id="43" name="at most">
				<template id="6">
					<description>A can happen at most once.</description>
					<display>0..1</display>
					<name>absence2</name>
					<text>! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) )</text>
					<parameters>
						<parameter branchable="false" id="1" name="A" type="activity">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
					</parameters>
					<statemessages/>
				</template>
				<template id="7">
					<description>A can happen at most two times.</description>
					<display>0..2</display>
					<name>absence3</name>
					<text>!(&lt;&gt;( "A" /\ X(  &lt;&gt;( "A" /\ X( &lt;&gt; "A" )) )))</text>
					<parameters>
						<parameter branchable="false" id="1" name="A">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
					</parameters>
					<statemessages>
						<message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message>
						<message state="VIOLATED">VIOLATED undefined</message>
						<message state="SATISFIED">SATISFIED undefined</message>
					</statemessages>
				</template>
			</group>
			<group id="47" name="exactly">
				<template id="8">
					<description>A has to happen exactly once.</description>
					<display>1</display>
					<name>exactly1</name>
					<text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text>
					<parameters>
						<parameter branchable="false" id="1" name="A" type="activity">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
					</parameters>
					<statemessages/>
				</template>
				<template id="9">
					<description>A has to happen exactly two times.</description>
					<display>2</display>
					<name>exactly2</name>
					<text>(&lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) )) /\ (!(&lt;&gt;( "A" /\ X(  &lt;&gt;( "A" /\ X( &lt;&gt; "A" )) ))))</text>
					<parameters>
						<parameter branchable="false" id="1" name="A">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
					</parameters>
					<statemessages>
						<message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message>
						<message state="VIOLATED">VIOLATED undefined</message>
						<message state="SATISFIED">SATISFIED undefined</message>
					</statemessages>
				</template>
			</group>
			<group id="88" name="position">
				<template id="1">
					<description>A has to be the first activity.</description>
					<display>init</display>
					<name>strong init</name>
					<text>"A"</text>
					<parameters>
						<parameter branchable="false" id="1" name="A">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
					</parameters>
					<statemessages>
						<message state="VIOLATED">VIOLATED undefined</message>
						<message state="SATISFIED">SATISFIED undefined</message>
						<message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message>
					</statemessages>
				</template>
				<template id="122">
					<description>Each instance has to start with execution of "A".</description>
					<display>init</display>
					<name>init</name>
					<text>false W "A"</text>
					<parameters>
						<parameter branchable="false" id="1" name="A">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
					</parameters>
					<statemessages>
						<message state="VIOLATED">&lt;html&gt;This constraint is violated because the first executed task 
							in this instance was not "A".  &lt;/html&gt;</message>
						<message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either:
							&lt;ul&gt;
							&lt;li&gt;none of the tasks in this instance were executed yet, or&lt;/li&gt;
							&lt;li&gt;the first executed task is &amp;quot;A&amp;quot;.&lt;/li&gt;
							&lt;/ul&gt;&lt;/html&gt;</message>
						<message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message>
					</statemessages>
				</template>
				<template id="146">
					<description/>
					<display>last</display>
					<name>last</name>
					<text>[] ("A" -&gt; !X!"A")</text>
					<parameters>
						<parameter branchable="false" id="1" name="A">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
					</parameters>
					<statemessages>
						<message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message>
						<message state="VIOLATED">VIOLATED undefined</message>
						<message state="SATISFIED">SATISFIED undefined</message>
					</statemessages>
				</template>
			</group>
			<template id="119">
				<description>A can never be started</description>
				<display>0</display>
				<name>absence</name>
				<text>!( &lt;&gt; ( "A" ) )</text>
				<parameters>
					<parameter branchable="false" id="1" name="A">
						<graphical>
							<style number="1"/>
							<begin fill="false" style="0"/>
							<middle fill="false" style="0"/>
							<end fill="false" style="0"/>
						</graphical>
					</parameter>
				</parameters>
				<statemessages>
					<message state="VIOLATED">VIOLATED undefined</message>
					<message state="SATISFIED">SATISFIED undefined</message>
					<message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message>
				</statemessages>
			</template>
		</group>
		<group id="51" name="relation">
			<group id="54" name="no order">
				<template id="10">
					<description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description>
					<display>responded existence</display>
					<name>responded existence</name>
					<text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text>
					<parameters>
						<parameter branchable="true" id="1" name="A" type="activity">
							<graphical>
								<style number="1"/>
								<begin fill="true" style="5"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
						<parameter branchable="true" id="2" name="B" type="activity">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
					</parameters>
					<statemessages/>
				</template>
				<template id="11">
					<description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description>
					<display>co-existence</display>
					<name>co-existence</name>
					<text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text>
					<parameters>
						<parameter branchable="true" id="1" name="A" type="activity">
							<graphical>
								<style number="1"/>
								<begin fill="true" style="5"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
						<parameter branchable="true" id="2" name="B" type="activity">
							<graphical>
								<style number="1"/>
								<begin fill="true" style="5"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
					</parameters>
					<statemessages/>
				</template>
			</group>
			<group id="58" name="order">
				<group id="62" name="simple">
					<template id="12">
						<description>Whenever activity "A" is executed, activity "B" has to be eventually executed afterwards.</description>
						<display>response</display>
						<name>response</name>
						<text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text>
						<parameters>
							<parameter branchable="true" id="2" name="A">
								<graphical>
									<style number="1"/>
									<begin fill="true" style="5"/>
									<middle fill="false" style="0"/>
									<end fill="false" style="0"/>
								</graphical>
							</parameter>
							<parameter branchable="true" id="1" name="B">
								<graphical>
									<style number="1"/>
									<begin fill="true" style="2"/>
									<middle fill="false" style="0"/>
									<end fill="false" style="0"/>
								</graphical>
							</parameter>
						</parameters>
						<statemessages>
							<message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &amp;quot;A&amp;quot; has been executed, 
								and task &amp;quot;B&amp;quot; was not executed after task &amp;quot;A&amp;quot;.&lt;/p&gt;
								&lt;p&gt;Execute task &amp;quot;B&amp;quot; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message>
							<message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
								&lt;ul&gt;
								&lt;li&gt;Either task &amp;quot;A&amp;quot; has not been executed yet, or&lt;/li&gt;
								&lt;li&gt;Task &amp;quot;A&amp;quot; has been executed, and task &amp;quot;B&amp;quot; has been executed at least once after task &amp;quot;A&amp;quot;.&lt;/li&gt;
								&lt;/ul&gt;&lt;/html&gt;</message>
							<message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
								such that task &amp;quot;A&amp;quot; was executed, 
								but task &amp;quot;B&amp;quot; was not executed after task &amp;quot;A&amp;quot;.&lt;/p&gt;
								&lt;/html&gt;&lt;/html&gt;</message>
						</statemessages>
					</template>
					<template id="13">
						<description>"B" has to be preceded by "A". "B" can happen only after "A" had happened.</description>
						<display>precedence</display>
						<name>precedence</name>
						<text>!"B" W "A"</text>
						<parameters>
							<parameter branchable="true" id="1" name="A">
								<graphical>
									<style number="1"/>
									<begin fill="true" style="0"/>
									<middle fill="false" style="0"/>
									<end fill="false" style="0"/>
								</graphical>
							</parameter>
							<parameter branchable="true" id="2" name="B">
								<graphical>
									<style number="1"/>
									<begin fill="true" style="10"/>
									<middle fill="false" style="0"/>
									<end fill="false" style="0"/>
								</graphical>
							</parameter>
						</parameters>
						<statemessages>
							<message state="VIOLATED">&lt;html&gt;This constraint is violated because task &amp;quot;B&amp;quot; was executed before task &amp;quot;A&amp;quot;.&lt;/html&gt;</message>
							<message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
								&lt;ul&gt;
								&lt;li&gt;task &amp;quot;B&amp;quot; was never executed, or&lt;/li&gt;
								&lt;li&gt;first task &amp;quot;A&amp;quot; was executed, and then task &amp;quot;B&amp;quot; was executed. &lt;/li&gt;
								&lt;/ul&gt;&lt;/html&gt;</message>
							<message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message>
						</statemessages>
					</template>
					<template id="14">
						<description>response and precedence:
							1. After every "A" there has to be at least one "B".
							and
							2. "B" has to be preceded by "A". "B" can happen only after "A" had happened.</description>
						<display>succession</display>
						<name>succession</name>
						<text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\  ( !( (( "B.started" \/ "B.completed") \/ "B.cancelled" ) ) W "A" )   )</text>
						<parameters>
							<parameter branchable="true" id="1" name="A">
								<graphical>
									<style number="1"/>
									<begin fill="true" style="5"/>
									<middle fill="false" style="0"/>
									<end fill="false" style="0"/>
								</graphical>
							</parameter>
							<parameter branchable="true" id="2" name="B">
								<graphical>
									<style number="1"/>
									<begin fill="true" style="10"/>
									<middle fill="false" style="0"/>
									<end fill="false" style="0"/>
								</graphical>
							</parameter>
						</parameters>
						<statemessages>
							<message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message>
							<message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message>
							<message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message>
						</statemessages>
					</template>
				</group>
				<group id="67" name="alternate">
					<template id="16">
						<description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description>
						<display>alternate response</display>
						<name>alternate response</name>
						<text>[]( "A" -&gt; X ( ("B" R !"A") &amp;&amp; (&lt;&gt; "B") ) )</text>
						<parameters>
							<parameter branchable="true" id="1" name="A">
								<graphical>
									<style number="2"/>
									<begin fill="true" style="5"/>
									<middle fill="false" style="0"/>
									<end fill="false" style="0"/>
								</graphical>
							</parameter>
							<parameter branchable="true" id="2" name="B">
								<graphical>
									<style number="2"/>
									<begin fill="true" style="10"/>
									<middle fill="false" style="0"/>
									<end fill="false" style="0"/>
								</graphical>
							</parameter>
						</parameters>
						<statemessages>
							<message state="VIOLATED">VIOLATED undefined</message>
							<message state="SATISFIED">SATISFIED undefined</message>
							<message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message>
						</statemessages>
					</template>
					<template id="17">
						<description>B cannot happen before A. After it happens, it can not happen before the next A again.</description>
						<display>alternate precedence</display>
						<name>alternate precedence</name>
						<text>(!"B" W "A" ) &amp;&amp; ([] ( "B" -&gt; X ( "A" R !"B" ) ) )</text>
						<parameters>
							<parameter branchable="true" id="1" name="A">
								<graphical>
									<style number="2"/>
									<begin fill="true" style="0"/>
									<middle fill="false" style="0"/>
									<end fill="false" style="0"/>
								</graphical>
							</parameter>
							<parameter branchable="true" id="2" name="B">
								<graphical>
									<style number="2"/>
									<begin fill="true" style="10"/>
									<middle fill="false" style="0"/>
									<end fill="false" style="0"/>
								</graphical>
							</parameter>
						</parameters>
						<statemessages>
							<message state="VIOLATED">VIOLATED undefined</message>
							<message state="SATISFIED">SATISFIED undefined</message>
							<message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message>
						</statemessages>
					</template>
					<template id="18">
						<description>Alternate response and alternate precedence:
							1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
							and
							2. B cannot happen before A. After it happens, it can not happen before the next A again.</description>
						<display>alternate succession</display>
						<name>alternate succession</name>
						<text>([]( "A" -&gt; ( ( X ("B" R !"A") ) &amp;&amp; (&lt;&gt; "B") ) )) &amp;&amp; (!"B" W "A" ) &amp;&amp; ([] ( "B" -&gt; X ( "A" R !"B" ) ) )</text>
						<parameters>
							<parameter branchable="true" id="1" name="A">
								<graphical>
									<style number="2"/>
									<begin fill="true" style="5"/>
									<middle fill="false" style="0"/>
									<end fill="false" style="0"/>
								</graphical>
							</parameter>
							<parameter branchable="true" id="2" name="B">
								<graphical>
									<style number="2"/>
									<begin fill="true" style="10"/>
									<middle fill="false" style="0"/>
									<end fill="false" style="0"/>
								</graphical>
							</parameter>
						</parameters>
						<statemessages>
							<message state="VIOLATED">VIOLATED undefined</message>
							<message state="SATISFIED">SATISFIED undefined</message>
							<message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message>
						</statemessages>
					</template>
					<template id="15">
						<description>If A is executed, then nex A cannot be executed before B is executed after the previous A. Traces CB and ACBACBBAC satisfy this. Trace ACAB does not satisfy.</description>
						<display>alternate</display>
						<name>alternate</name>
						<text>[]( ( "A" -&gt; X(( !("A") W "B" ))))</text>
						<parameters>
							<parameter branchable="true" id="1" name="A">
								<graphical>
									<style number="2"/>
									<begin fill="true" style="5"/>
									<middle fill="false" style="0"/>
									<end fill="false" style="0"/>
								</graphical>
							</parameter>
							<parameter branchable="true" id="2" name="B">
								<graphical>
									<style number="2"/>
									<begin fill="false" style="0"/>
									<middle fill="false" style="0"/>
									<end fill="false" style="0"/>
								</graphical>
							</parameter>
						</parameters>
						<statemessages>
							<message state="VIOLATED">VIOLATED undefined</message>
							<message state="SATISFIED">SATISFIED undefined</message>
							<message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message>
						</statemessages>
					</template>
				</group>
				<group id="72" name="chain">
					<template id="19">
						<description>After A the  next one has to be B.</description>
						<display>chain response</display>
						<name>chain response</name>
						<text>[] ( ( "A"  -&gt; X( "B" ) ) )</text>
						<parameters>
							<parameter branchable="false" id="1" name="A">
								<graphical>
									<style number="3"/>
									<begin fill="true" style="5"/>
									<middle fill="false" style="0"/>
									<end fill="false" style="0"/>
								</graphical>
							</parameter>
							<parameter branchable="false" id="2" name="B">
								<graphical>
									<style number="3"/>
									<begin fill="true" style="2"/>
									<middle fill="false" style="0"/>
									<end fill="false" style="0"/>
								</graphical>
							</parameter>
						</parameters>
						<statemessages>
							<message state="VIOLATED">VIOLATED undefined</message>
							<message state="SATISFIED">SATISFIED undefined</message>
							<message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message>
						</statemessages>
					</template>
					<template id="20">
						<description>B can be executed only directly after A.</description>
						<display>chain precedence</display>
						<name>chain precedence</name>
						<text>[]( ( Y( "B" ) -&gt; "A") )</text>
						<parameters>
							<parameter branchable="true" id="1" name="A">
								<graphical>
									<style number="3"/>
									<begin fill="false" style="0"/>
									<middle fill="false" style="0"/>
									<end fill="false" style="0"/>
								</graphical>
							</parameter>
							<parameter branchable="true" id="2" name="B">
								<graphical>
									<style number="3"/>
									<begin fill="true" style="10"/>
									<middle fill="false" style="0"/>
									<end fill="false" style="0"/>
								</graphical>
							</parameter>
						</parameters>
						<statemessages>
							<message state="VIOLATED">VIOLATED undefined</message>
							<message state="SATISFIED">SATISFIED undefined</message>
							<message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message>
						</statemessages>
					</template>
					<template id="21">
						<description>A and B can happen only next to each other.</description>
						<display>chain succession</display>
						<name>chain succession</name>
						<text>[](  ( "A" = X( "B" ) )  )</text>
						<parameters>
							<parameter branchable="true" id="1" name="A">
								<graphical>
									<style number="3"/>
									<begin fill="true" style="5"/>
									<middle fill="false" style="0"/>
									<end fill="false" style="0"/>
								</graphical>
							</parameter>
							<parameter branchable="true" id="2" name="B">
								<graphical>
									<style number="3"/>
									<begin fill="true" style="10"/>
									<middle fill="false" style="0"/>
									<end fill="false" style="0"/>
								</graphical>
							</parameter>
						</parameters>
						<statemessages>
							<message state="VIOLATED">VIOLATED undefined</message>
							<message state="SATISFIED">SATISFIED undefined</message>
							<message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message>
						</statemessages>
					</template>
				</group>
			</group>
		</group>
		<group id="77" name="choice">
			<group id="80" name="simple">
				<template id="24">
					<description/>
					<display>1 of 3</display>
					<name>choice 1 of 3</name>
					<text>(&lt;&gt; "A") || (&lt;&gt; "B") || (&lt;&gt; "C")</text>
					<parameters>
						<parameter branchable="false" id="1" name="A">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="9"/>
							</graphical>
						</parameter>
						<parameter branchable="false" id="2" name="B">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
						<parameter branchable="false" id="3" name="C">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
					</parameters>
					<statemessages>
						<message state="VIOLATED">VIOLATED undefined</message>
						<message state="SATISFIED">SATISFIED undefined</message>
						<message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message>
					</statemessages>
				</template>
				<template id="24">
					<description/>
					<display>2 of 3</display>
					<name>choice 2 of 3</name>
					<text>( ( ( &lt;&gt;("A") /\ &lt;&gt;( "B" ) ) \/ ( &lt;&gt;("A") /\ &lt;&gt;( "C" ) ) ) \/  ( &lt;&gt;("B") /\ &lt;&gt;( "C" ) ) ) </text>
					<parameters>
						<parameter branchable="false" id="1" name="A" type="activity">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="9"/>
							</graphical>
						</parameter>
						<parameter branchable="false" id="2" name="B" type="activity">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
						<parameter branchable="false" id="3" name="C" type="activity">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
					</parameters>
					<statemessages/>
				</template>
				<template id="29">
					<description>At least one of the four tasks "A", "B", "C" or "D" has to be executed.</description>
					<display>1 of 4</display>
					<name>choice 1 of 4</name>
					<text>&lt;&gt;( ( ( ( "A" \/  "B" ) \/  "C" ) \/  "D" ) )</text>
					<parameters>
						<parameter branchable="false" id="1" name="A">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="9"/>
							</graphical>
						</parameter>
						<parameter branchable="false" id="2" name="B">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
						<parameter branchable="false" id="3" name="C">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
						<parameter branchable="false" id="4" name="D">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
					</parameters>
					<statemessages>
						<message state="VIOLATED">&lt;html&gt;This constraint is temporarily violated because none of the tasks &amp;quot;A&amp;quot;, &amp;quot;B&amp;quot;, &amp;quot;C&amp;quot; or 
							&amp;quot;D&amp;quot; has been executed at all.&lt;/html&gt;</message>
						<message state="SATISFIED">&lt;html&gt;This constraint is satisfied because one or more of the tasks &amp;quot;A&amp;quot;, &amp;quot;B&amp;quot;, &amp;quot;C&amp;quot; or 
							&amp;quot;D&amp;quot; has already been executed.&amp;nbsp;&lt;/html&gt;</message>
						<message state="VIOLATED_TEMPORARY">&lt;html&gt;This constraint is temporarily violated because none of the tasks &amp;quot;A&amp;quot;, &amp;quot;B&amp;quot;, &amp;quot;C&amp;quot; or 
							&amp;quot;D&amp;quot; has been executed yet.&lt;/html&gt;</message>
					</statemessages>
				</template>
				<template id="138">
					<description/>
					<display>1 of 5</display>
					<name>choice 1 of 5</name>
					<text>&lt;&gt;( ( ( ( ( "A" \/  "B" ) \/  "C" ) \/  "D" ) \/ "E" ) )</text>
					<parameters>
						<parameter branchable="false" id="1" name="A">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="9"/>
							</graphical>
						</parameter>
						<parameter branchable="false" id="2" name="B">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
						<parameter branchable="false" id="3" name="C">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
						<parameter branchable="false" id="4" name="D">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
						<parameter branchable="false" id="5" name="E">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
					</parameters>
					<statemessages>
						<message state="VIOLATED">VIOLATED undefined</message>
						<message state="SATISFIED">SATISFIED undefined</message>
						<message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message>
					</statemessages>
				</template>
				<template id="142">
					<description>Either A is executed at least once, or B is executed at least once.</description>
					<display>1 of 2</display>
					<name>choice 1 of 2</name>
					<text>&lt;&gt;( ( "A" \/ "B" ) )</text>
					<parameters>
						<parameter branchable="false" id="1" name="A">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="9"/>
							</graphical>
						</parameter>
						<parameter branchable="false" id="2" name="B">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
					</parameters>
					<statemessages>
						<message state="VIOLATED">VIOLATED undefined</message>
						<message state="SATISFIED">SATISFIED undefined</message>
						<message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message>
					</statemessages>
				</template>
			</group>
			<group id="84" name="exclusive">
				<template id="23">
					<description>A or B has to happen but not both.</description>
					<display>exclusive choice</display>
					<name>exclusive choice</name>
					<text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text>
					<parameters>
						<parameter branchable="true" id="1" name="A" type="activity">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="true" style="9"/>
							</graphical>
						</parameter>
						<parameter branchable="true" id="2" name="B" type="activity">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
					</parameters>
					<statemessages/>
				</template>
				<template id="25">
					<description>At least two activities (from A, B and C) have to be executed.</description>
					<display>1 of 3</display>
					<name>exclusive choice 1of3</name>
					<text>( ( ( ( ( &lt;&gt;("A") \/ &lt;&gt;( "B" ) ) \/ &lt;&gt;( "C" ) ) /\ !( (&lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) ) /\ !( ( &lt;&gt;( "B" ) /\ &lt;&gt;( "C" ) ) ) ) /\ !( ( &lt;&gt;( "A" ) /\ &lt;&gt;( "C" ) ) ) )</text>
					<parameters>
						<parameter branchable="true" id="1" name="A" type="activity">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="true" style="9"/>
							</graphical>
						</parameter>
						<parameter branchable="true" id="2" name="B" type="activity">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
						<parameter branchable="true" id="3" name="C" type="activity">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
					</parameters>
					<statemessages/>
				</template>
				<template id="27">
					<description>Only two activities (from A, B and C) have to be executed.</description>
					<display>2 of 3</display>
					<name>exclusive choice 2of3</name>
					<text>( ( ( ( &lt;&gt;("A") /\ &lt;&gt;( "B" ) ) \/ ( &lt;&gt;("A") /\ &lt;&gt;( "C" ) ) ) \/  ( &lt;&gt;("B") /\ &lt;&gt;( "C" ) ) ) /\ ! ( ( ( &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) /\ &lt;&gt;( "C" ) ) ) )</text>
					<parameters>
						<parameter branchable="false" id="1" name="A">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="true" style="9"/>
							</graphical>
						</parameter>
						<parameter branchable="false" id="2" name="B">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
						<parameter branchable="false" id="3" name="C">
							<graphical>
								<style number="1"/>
								<begin fill="false" style="0"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
					</parameters>
					<statemessages>
						<message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message>
						<message state="VIOLATED">VIOLATED undefined</message>
						<message state="SATISFIED">SATISFIED undefined</message>
					</statemessages>
				</template>
			</group>
		</group>
		<group id="92" name="negative relation">
			<group id="95" name="no order">
				<template id="99">
					<description>Only one of the two tasks "A" or "B" can be executed, but not both.</description>
					<display>not co-existence</display>
					<name>not co-existence</name>
					<text>!( ( &lt;&gt;( "A" ) /\ &lt;&gt;(  "B" ) ) )</text>
					<parameters>
						<parameter branchable="false" id="1" name="A">
							<graphical>
								<style number="1"/>
								<begin fill="true" style="5"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="8"/>
							</graphical>
						</parameter>
						<parameter branchable="false" id="2" name="B">
							<graphical>
								<style number="1"/>
								<begin fill="true" style="5"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
					</parameters>
					<statemessages>
						<message state="VIOLATED">&lt;html&gt;This constraint is violated because both tasks &amp;quot;A&amp;quot; and &amp;quot;B&amp;quot; were executed.&lt;/html&gt;</message>
						<message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either:&lt;ul&gt;
							&lt;li&gt;none of the tasks &amp;quot;A&amp;quot; and &amp;quot;B&amp;quot; were executed, or&lt;/li&gt;
							&lt;li&gt;task &amp;quot;A&amp;quot; was executed and task &amp;quot;B&amp;quot; not, or&lt;/li&gt;
							&lt;li&gt;task &amp;quot;B&amp;quot; was executed and task &amp;quot;A&amp;quot; not.&lt;/li&gt;&lt;/html&gt;</message>
						<message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen.&lt;/html&gt;</message>
					</statemessages>
				</template>
			</group>
			<group id="103" name="order">
				<template id="107">
					<description>Before B there cannot be A and after A there cannot be B.</description>
					<display>not succession</display>
					<name>not succession</name>
					<text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text>
					<parameters>
						<parameter branchable="false" id="1" name="A">
							<graphical>
								<style number="1"/>
								<begin fill="true" style="5"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="8"/>
							</graphical>
						</parameter>
						<parameter branchable="true" id="2" name="B">
							<graphical>
								<style number="1"/>
								<begin fill="true" style="10"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
					</parameters>
					<statemessages>
						<message state="VIOLATED">VIOLATED undefined</message>
						<message state="SATISFIED">SATISFIED undefined</message>
						<message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message>
					</statemessages>
				</template>
			</group>
			<group id="111" name="chain">
				<template id="115">
					<description>A and be can never be executed next to each other where A if executed first and B second.</description>
					<display>not chain succession</display>
					<name>not chain succession</name>
					<text>[]( ( "A" -&gt; Y( !( "B" ) ) ) )</text>
					<parameters>
						<parameter branchable="false" id="1" name="A">
							<graphical>
								<style number="3"/>
								<begin fill="true" style="5"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="8"/>
							</graphical>
						</parameter>
						<parameter branchable="false" id="2" name="B">
							<graphical>
								<style number="3"/>
								<begin fill="true" style="10"/>
								<middle fill="false" style="0"/>
								<end fill="false" style="0"/>
							</graphical>
						</parameter>
					</parameters>
					<statemessages>
						<message state="VIOLATED">VIOLATED undefined</message>
						<message state="SATISFIED">SATISFIED undefined</message>
						<message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message>
					</statemessages>
				</template>
			</group>
		</group>
	</language>
	<language id="3" name="Simple">
		<template id="5">
			<description>A and B are executed in a direct sequence.</description>
			<display>sequence</display>
			<name>sequence</name>
			<text>"A"</text>
			<parameters>
				<parameter branchable="false" id="1" name="A" type="activity">
					<graphical>
						<style number="1"/>
						<begin fill="false" style="0"/>
						<middle fill="false" style="0"/>
						<end fill="false" style="0"/>
					</graphical>
				</parameter>
				<parameter branchable="false" id="2" name="B" type="activity">
					<graphical>
						<style number="1"/>
						<begin fill="false" style="0"/>
						<middle fill="false" style="0"/>
						<end fill="false" style="0"/>
					</graphical>
				</parameter>
			</parameters>
			<statemessages/>
		</template>
		<group id="11" name="parallel">
			<template id="9">
				<description>After A both B and C directly follow.</description>
				<display>parallel split</display>
				<name>parallel split</name>
				<text>"A"</text>
				<parameters>
					<parameter branchable="false" id="1" name="A" type="activity">
						<graphical>
							<style number="1"/>
							<begin fill="false" style="0"/>
							<middle fill="false" style="0"/>
							<end fill="true" style="5"/>
						</graphical>
					</parameter>
					<parameter branchable="true" id="2" name="B" type="activity">
						<graphical>
							<style number="1"/>
							<begin fill="false" style="4"/>
							<middle fill="false" style="0"/>
							<end fill="false" style="0"/>
						</graphical>
					</parameter>
					<parameter branchable="true" id="3" name="C" type="activity">
						<graphical>
							<style number="1"/>
							<begin fill="false" style="4"/>
							<middle fill="false" style="0"/>
							<end fill="false" style="0"/>
						</graphical>
					</parameter>
				</parameters>
				<statemessages/>
			</template>
			<template id="14">
				<description/>
				<display>synchronization</display>
				<name>synchronization</name>
				<text>"A"</text>
				<parameters>
					<parameter branchable="false" id="1" name="A" type="activity">
						<graphical>
							<style number="1"/>
							<begin fill="false" style="4"/>
							<middle fill="false" style="0"/>
							<end fill="true" style="5"/>
						</graphical>
					</parameter>
					<parameter branchable="true" id="2" name="B" type="activity">
						<graphical>
							<style number="1"/>
							<begin fill="false" style="0"/>
							<middle fill="false" style="0"/>
							<end fill="false" style="0"/>
						</graphical>
					</parameter>
					<parameter branchable="true" id="3" name="C" type="activity">
						<graphical>
							<style number="1"/>
							<begin fill="false" style="0"/>
							<middle fill="false" style="0"/>
							<end fill="false" style="0"/>
						</graphical>
					</parameter>
				</parameters>
				<statemessages/>
			</template>
		</group>
		<group id="17" name="choice">
			<template id="7">
				<description>After executing A, either B or C directly follow, but not both.</description>
				<display>exclusive choice</display>
				<name>exclusive choice</name>
				<text>"A" </text>
				<parameters>
					<parameter branchable="false" id="1" name="A" type="activity">
						<graphical>
							<style number="1"/>
							<begin fill="false" style="0"/>
							<middle fill="false" style="0"/>
							<end fill="false" style="5"/>
						</graphical>
					</parameter>
					<parameter branchable="true" id="2" name="B" type="activity">
						<graphical>
							<style number="1"/>
							<begin fill="false" style="4"/>
							<middle fill="false" style="0"/>
							<end fill="false" style="0"/>
						</graphical>
					</parameter>
					<parameter branchable="true" id="3" name="C" type="activity">
						<graphical>
							<style number="1"/>
							<begin fill="false" style="4"/>
							<middle fill="false" style="0"/>
							<end fill="false" style="0"/>
						</graphical>
					</parameter>
				</parameters>
				<statemessages/>
			</template>
			<template id="20">
				<description>Directlly after  B or C follows A. B and C are not executed both.</description>
				<display>simple merge</display>
				<name>simple merge</name>
				<text>"A"</text>
				<parameters>
					<parameter branchable="false" id="1" name="A" type="activity">
						<graphical>
							<style number="1"/>
							<begin fill="false" style="4"/>
							<middle fill="false" style="0"/>
							<end fill="false" style="5"/>
						</graphical>
					</parameter>
					<parameter branchable="true" id="2" name="B" type="activity">
						<graphical>
							<style number="1"/>
							<begin fill="false" style="0"/>
							<middle fill="false" style="0"/>
							<end fill="false" style="0"/>
						</graphical>
					</parameter>
					<parameter branchable="true" id="3" name="C" type="activity">
						<graphical>
							<style number="1"/>
							<begin fill="false" style="0"/>
							<middle fill="false" style="0"/>
							<end fill="false" style="0"/>
						</graphical>
					</parameter>
				</parameters>
				<statemessages/>
			</template>
		</group>
		<template id="23">
			<description/>
			<display>test</display>
			<name>test</name>
			<text>A || B || C || D || E || H</text>
			<parameters>
				<parameter branchable="false" id="1" name="A">
					<graphical>
						<style number="1"/>
						<begin fill="false" style="0"/>
						<middle fill="false" style="0"/>
						<end fill="false" style="0"/>
					</graphical>
				</parameter>
				<parameter branchable="false" id="2" name="B">
					<graphical>
						<style number="1"/>
						<begin fill="false" style="0"/>
						<middle fill="false" style="0"/>
						<end fill="false" style="0"/>
					</graphical>
				</parameter>
				<parameter branchable="false" id="3" name="C">
					<graphical>
						<style number="1"/>
						<begin fill="false" style="0"/>
						<middle fill="false" style="0"/>
						<end fill="false" style="0"/>
					</graphical>
				</parameter>
				<parameter branchable="false" id="4" name="D">
					<graphical>
						<style number="1"/>
						<begin fill="false" style="0"/>
						<middle fill="false" style="0"/>
						<end fill="false" style="0"/>
					</graphical>
				</parameter>
				<parameter branchable="false" id="5" name="E">
					<graphical>
						<style number="1"/>
						<begin fill="false" style="0"/>
						<middle fill="false" style="0"/>
						<end fill="false" style="0"/>
					</graphical>
				</parameter>
				<parameter branchable="false" id="6" name="H">
					<graphical>
						<style number="1"/>
						<begin fill="false" style="0"/>
						<middle fill="false" style="0"/>
						<end fill="false" style="0"/>
					</graphical>
				</parameter>
			</parameters>
			<statemessages>
				<message state="VIOLATED">VIOLATED undefined</message>
				<message state="SATISFIED">SATISFIED undefined</message>
				<message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message>
			</statemessages>
		</template>
	</language>
</languages>
